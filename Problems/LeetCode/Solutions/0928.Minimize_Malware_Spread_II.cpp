typedef vector<int> vi;
typedef vector<vi> vii;
typedef vector<bool> vb;

class Solution {
public:
    void dfs(int u , int& cost , vii& adj , vb& mark) {
        cost++;
        mark[u] = true;
        for( int i = 0 ; i < adj[u].size() ; i++ ) {
            int v = adj[u][i];
            if(!mark[v])
                dfs(v,cost,adj,mark);
        }
    }
    int minMalwareSpread(vii& G, vi& init) {
        int n = G.size();
        vii adj(n);
        for( int i = 0 ; i < n ; i++ )
            for( int j = 0 ; j < n ; j++ )
                if(G[i][j])
                    adj[i].push_back(j);
        int bestNode = -1 , minCost = -1;
        for( int i = 0 ; i < init.size() ; i++ ) {
            int u = init[i] , cost = 0;
            vector<bool> mark(n,false);
            mark[u] = true;
            for( int j = 0 ; j < init.size() ; j++ )
                if(i != j && !mark[init[j]])
                    dfs(init[j],cost,adj,mark);
            if(minCost == -1 or cost < minCost or (cost == minCost and u < bestNode))
                bestNode = u , minCost = cost;
        }
        return bestNode;
    }
};